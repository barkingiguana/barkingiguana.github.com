<p>I've been thinking about an XMPP chat-bot based interface - something similar to the <a href="http://barkingiguana.com/2008/05/28/xmpp4r-simple-makes-xmpp-in-ruby-uhh-simple">XMPP bot I created in May '08</a> - for a project that I've started playing with recently. This project is still very new so it doesn't have much code yet. A perfect time for experimenting. My <a href="http://barkingiguana.com/2009/01/08/breaking-activecouch-in-fun-and-inventive-ways">recent foray</a> into the world of ActiveCouch reminded me of a library called <a href="http://github.com/seanohalpin/doodle">Doodle</a> that I've been meaning to get to grips with. Can you see where this is going?</p>

<blockquote cite="http://github.com/seanohalpin/doodle">Doodle is a Ruby library and gem for simplifying the definition of Ruby classes by making attributes and their properties more declarative</blockquote>

<p>Doodle has a number of advantages over the ActiveCouch approach, but this isn't a post about Doodle so I'll save that for another time.</p>

<p>I used Doodle to create something DSL-like that can describe, in Ruby, a chat-bot that talks XMPP. It doesn't do anything fancy yet - it doesn't deal with subscription requests for example - but it can login, send and receive messages, and it has the beginnings of a basic roster so it can track who it's seen and talked to and when.</p>

<pre><code class="ruby">Natter.bot do
  channel do
    username "username@domain.com"
    password "sekrit"
  end
  on :message_received do |message|
    puts Time.now.to_s + "> " + message.body
    reply_to message, "Thanks for your message!"
  end
end</code></pre>

<p>If you'd like to play with it, the code can be retrieved using Git.</p>

<pre><code>git clone http://barkingiguana.com/~craig/code/natter.git</code></pre>

<p>You'll need to install xmpp4r-simple and doodle to get it to run.</p>

<pre><code>sudo gem install xmpp4r-simple doodle</code></pre>

<p>There's very little documentation at the moment, but there are a few simple examples in the <code>examples/</code> subdirectory and there's a quick example in the <code>README</code> file too.</p>
